{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","Math","floor","random","newTask","console","log","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c7bb29c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nexport const Button = ({color, text, onClick}) => {\r\n\r\n    \r\n    return (\r\n        <button onClick={onClick}\r\n        style={{backgroundColor: color}}className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: 'Add',\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n\r\n    color: PropTypes.string,\r\n    text:PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { Button } from './Button'\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ?'red': 'green'} onClick={onAdd} text={showAdd ?'Close': 'Add'}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}></Task>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) =>{\r\n    e.preventDefault()\r\n\r\n    if(!text){\r\n      alert('please add text for task')\r\n      return\r\n    }\r\n\r\n    onAdd({text, day, reminder})\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit} >\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input type=\"text\" placeholder=\"Add text\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input type=\"text\" placeholder=\"Add Date & Time\" value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className='btn btn' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors appointment\",\n      day: \"Feb 5th  at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Dance Class\",\n      day: \"Feb 6th  at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Do something good\",\n      day: \"Feb 5th  at 2:30pm\",\n      reminder: false,\n    },\n  ]);\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const deleteTask = (id) => {\n    console.log(\"delete\", id);\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle reminder\n\n  const toggleReminder = (id) => {\n    console.log(id);\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000 + 1);\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n\n    console.log(task);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Task to Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}